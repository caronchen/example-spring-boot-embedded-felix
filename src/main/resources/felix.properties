# Sets the OSGi execution environment for the framework. 
# The framework tries to set this to a reasonable default value. 
# If you specify a value, it overrides the framework default. 
# Refer to the OSGi specification for appropriate execution environment values.

#org.osgi.framework.executionenvironment=

# Sets the directory to use as the bundle cache; by default the bundle cache directory is felix-cache in the current working directory. 
# The value should be a valid directory name. The directory name can be either absolute or relative. 
# Relative directory names are relative to the current working directory. The specified directory will be created if it does not exist.

#org.osgi.framework.storage=

# Sets the root directory used to calculate the bundle cache directory for relative directory names. 
# If org.osgi.framework.storage is set to a relative name, by default it is relative to the current working directory. 
# If this property is set, then it will be calculated as being relative to the specified root directory.

#felix.cache.rootdir=

# Determines whether the bundle cache is flushed. 
# The value can either be "none" or "onFirstInit", where "none" does not flush the bundle cache and "onFirstInit" flushes the bundle cache 
# when the framework instance is first initialized. The default value is "none".

#org.osgi.framework.storage.clean=

# The integer value of this string sets an upper limit on how many files the cache will open. 
# The default value is zero, which means there is no limit. (Since 4.0)

#felix.cache.filelimit=

# Enables or disables bundle cache locking, which is used to prevent concurrent access to the bundle cache. 
# This is enabled by default, but on older/smaller JVMs file channel locking is not available; set this property to false to disable it.

#felix.cache.locking=

# Sets the buffer size to be used by the cache; the default value is 4096. 
# The integer value of this string provides control over the size of the internal buffer of the disk cache for performance reasons.

#felix.cache.bufsize=

# Specifies a comma-delimited list of packages that should be exported via the System Bundle from the framework class loader. 
# The framework will set this to a reasonable default. If the value is specified, it replaces any default value.

#org.osgi.framework.system.packages=

# Specifies a comma-delimited list of packages that should be exported via the System Bundle from the framework class loader in addition 
# to the packages in org.osgi.framework.system.packages. The default value is empty. If a value is specified, 
# it is appended to the list of default or specified packages in org.osgi.framework.system.packages.

#org.osgi.framework.system.packages.extra=

# Specifies a comma-delimited list of packages that should be made implicitly available to all bundles from the parent class loader. 
# It is recommended not to use this property since it breaks modularity. The default value is empty.

#org.osgi.framework.bootdelegation=

# Specifies which class loader is used for boot delegation. Possible values are: boot for the boot class loader, 
# app for the application class loader, ext for the extension class loader, and framework for the framework's class loader. The default is boot.

#org.osgi.framework.bundle.parent=

#  - Specifies whether the framework should try to guess when to implicitly boot delegate to ease integration with external code. 
# The default value is true.

#felix.bootdelegation.implicit=

#  - A List of BundleActivator instances that are started/stopped when the System Bundle is started/stopped. 
# The specified instances will receive the System Bundle's BundleContext when invoked. 
# (This property cannot be set in the configuration file since it requires instances; it can only be passed into Felix' constructor directly.)

#felix.systembundle.activators=

#  - An instance of org.apache.felix.framework.Logger that the framework uses as its default logger. 
# (This property cannot be set in the configuration file since it requires an instance; it can only be passed into Felix' constructor directly.)

#felix.log.logger=

#  - An integer value indicating the degree of logging reported by the framework; the higher the value the more logging is reported. 
# If zero ('0') is specified, then logging is turned off completely. 
# The log levels match those specified in the OSGi Log Service (i.e., 1 = error, 2 = warning, 3 = information, and 4 = debug). 
# The default value is 1.

#felix.log.level=4

# The initial start level of the framework once it starts execution; the default value is 1.

#org.osgi.framework.startlevel.beginning=

#  The default start level for newly installed bundles; the default value is 1.

#felix.startlevel.bundle=

# Flag to indicate whether to activate the URL Handlers service for the framework instance; the default value is true. 
# Activating the URL Handlers service will result in the URL.setURLStreamHandlerFactory() and URLConnection.setContentHandlerFactory() being called.

#felix.service.urlhandlers=

#  - An alias for resolving native processor requirements new with R6. This can be used to add new or override existing processors. 
# The represents the key for the processor architecture such as x86-64 (which may not contain spaces) 
# then the property value is a comma delimited list of aliases such as x86_64,amd64. EX felix.native.processor.alias.x86-64=x86_64,amd64

#felix.native.processor.alias.<procName>=

#  - An alias for resolving native operating system requirements new with R6. This can be used to add new or override existing operating systems. 
# The represents the key for the operating system such as windows7 (which may not contain spaces) 
# then the property value is a comma delimited list of aliases such as Windows 7,win32. EX felix.native.osname.alias.windows7=Windows 7,win32

#felix.native.osname.alias.<osName>=
